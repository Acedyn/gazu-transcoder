from .types import TranslationTargetConfig

# The default is actually the config for the python grammar
config: TranslationTargetConfig = {
    "function": {
        "open_body": ":",
        "define_key": "def",
        "return_key": "return",
        "close_body": "",
        "argument_separator": ",",
    },
    "operator": {
        "add": "+",
        "sub": "-",
        "div": "/",
        "mod": "%",
        "pow": "**",
        "mult": "*",
        "or_op": "or",
        "equal": "==",
        "is_op": "is",
        "in_op": "in",
        "bit_or": "|",
        "and_op": "and",
        "l_shift": "<<",
        "r_shift": ">>",
        "bit_xor": "^",
        "bit_and": "&",
        "mat_mult": "@",
        "floor_div": "//",
        "not_equal": "!=",
        "is_not_op": "is not",
        "not_in_op": "not in",
        "lower_than": "<",
        "greater_than": ">",
        "lower_than_equal": "<=",
        "greater_than_equal": ">=",
    },
    "assignement": {
        "assign_key": "=",
        "multiple_assign_end": "",
        "multiple_assign_join": ",",
        "multiple_assign_begin": "",
    },
    "access": {
        "attribute": ".",
        "subscript_open": "[",
        "subscript_close": "]",
    },
    "literals": {
        "list_end": "]",
        "list_begin": "[",
        "list_join": ",",
        "tuple_end": ")",
        "tuple_begin": "(",
        "tuple_join": ",",
        "dict_end": "}",
        "dict_begin": "{",
        "dict_join": ",",
        "dict_assign": ":",
    },
    "flow": {
        "while_key": "while",
        "while_end": "",
        "while_begin": "",
        "while_open_body": ":",
        "while_close_body": "",
        "if_key": "if",
        "if_end": "",
        "if_begin": "",
        "if_open_body": ":",
        "if_close_body": "",
        "foreach_key": "for",
        "foreach_begin": "",
        "foreach_end": "",
        "foreach_open_body": ":",
        "foreach_close_body": "",
        "foreach_separator": "in"
    }
}
